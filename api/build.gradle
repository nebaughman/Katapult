plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
}

group 'net.nyhm.katapult'
version '0.6.0'

sourceCompatibility = 1.8
mainClassName = 'net.nyhm.katapult.example.MainKt'

repositories {
    jcenter()
}

dependencies {
    implementation 'com.github.ajalt:clikt:2.0.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.41'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'
    implementation 'io.javalin:javalin:3.0.0'
    implementation 'org.slf4j:slf4j-simple:1.7.26'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9'
    implementation 'commons-codec:commons-codec:1.12'
    implementation 'com.github.spullara.mustache.java:compiler:0.9.6'
    implementation 'org.mindrot:jbcrypt:0.4'
    implementation 'org.jetbrains.exposed:exposed:0.14.4'
    implementation 'org.xerial:sqlite-jdbc:3.27.2.1'
    implementation 'com.google.inject:guice:4.2.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.1'
}

// https://stackoverflow.com/a/33026919/6004010
task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/project.properties").withWriter { w ->
            Properties p = new Properties()
            p['project'] = project.name
            p['version'] = project.version.toString()
            p.store w, "Generated by build process"
        }
    }
}

classes {
    dependsOn createProperties
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}